akka {
  loglevel = INFO
  #stdout-loglevel = INFO
  #loggers = ["akka.event.slf4j.Slf4jLogger"]
  #default-dispatcher {
  #  fork-join-executor {
  #    parallelism-min = 8
  #  }
  #}
  #test {
   # timefactor = 1
  #}
  
 #extensions = ["kamon.metric.Metrics","kamon.statsd.StatsD",  "kamon.system.SystemMetrics", "kamon.logreporter.LogReporter", "kamon.akka.Akka"]
}

kamon {

  metric {

    tick-interval = 10 seconds

    disable-aspectj-weaver-missing-error = false

    track-unmatched-entities = no

    filters {
      akka-actor {
        includes = ["*/user/*"]
        excludes = [ "*/system/**", "*/user/IO-**", "*kamon*" ]
      }

      akka-router {
        includes = ["*/user/*"]
        excludes = []
      }

      akka-dispatcher {
        includes = ["*/user/*"]
        excludes = []
      }

      trace {
        includes = [ "**" ]
        excludes = [ ]
      }
    }
    
  }

  show-aspectj-missing-warning = yes

 
  # ~~~~~~ StatsD configuration ~~~~~~~~~~~~~~~~~~~~~~~~
 
  statsd {
    # Hostname and port in which your StatsD is running. Remember that StatsD packets are sent using UDP and
    # setting unreachable hosts and/or not open ports wont be warned by the Kamon, your data wont go anywhere.
    hostname = "192.168.99.100"
    port = 8125
 
    # Interval between metrics data flushes to StatsD. It's value must be equal or greater than the
    # kamon.metrics.tick-interval setting.
    flush-interval = 10 second
    report-system-metrics = true
    # Max packet size for UDP metrics data sent to StatsD.
    max-packet-size = 1024 bytes
 
    # Subscription patterns used to select which metrics will be pushed to StatsD. Note that first, metrics
    # collection for your desired entities must be activated under the kamon.metrics.filters settings.
    includes {
      actor       = [ "*" ]
      trace       = [ "*" ]
      dispatcher  = [ "*" ]
    }
    
    subscriptions {
	  histogram       = [ "**" ]
      min-max-counter = [ "**" ]
      gauge           = [ "**" ]
      counter         = [ "**" ]
      trace           = [ "**" ]
      trace-segment   = [ "**" ]
      akka-actor      = [ "**" ]
      akka-dispatcher = [ "**" ]
      akka-router     = [ "**" ]
      system-metric   = [ "**" ]
      http-server     = [ "**" ]
	}
 
    simple-metric-key-generator {
      # Application prefix for all metrics pushed to StatsD. The default namespacing scheme for metrics follows
      # this pattern:
      #    application.host.entity.entity-name.metric-name
      application = "irishPub"
      include-hostname = true
      hostname-override = none
      metric-name-normalization-strategy = normalize
    }
    
    log-reporter {

    # Enable system metrics
    # In order to not get a ClassNotFoundException, we must register the kamon-sytem-metrics module
    report-system-metrics = true
   }
   
  }
  
  modules {
    kamon-log-reporter.auto-start = yes
    kamon-system-metrics.auto-start = yes
    kamon-statsd.auto-start = yes
    kamon-akka.auto-start = yes
  }
  
}

 



